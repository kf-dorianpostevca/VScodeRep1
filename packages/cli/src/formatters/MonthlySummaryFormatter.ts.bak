/**
 * Formatter for monthly summary output
 */

import { MonthlySummary } from '@intelligent-todo/shared';

/**
 * Formats monthly summary for CLI display
 * @param summary - Monthly summary to format
 * @returns Formatted string for console output
 */
export function formatMonthlySummary(summary: MonthlySummary): string {
  const monthDate = new Date(`${summary.month}-01`);
  const monthName = monthDate.toLocaleDateString('en-US', {
    month: 'long',
    year: 'numeric',
  });

  let output = `🎉 Monthly Progress Report - ${monthName}\n\n`;

  // Tasks Overview
  output += '📈 Tasks Overview\n';
  output += `  🎯 Total Created: ${summary.totalTasks} tasks\n`;
  output += `  ✅ Completed: ${summary.completedTasks} tasks\n`;
  output += `  📊 Completion Rate: ${summary.completionRate}%\n\n`;

  // Time Estimation
  if (summary.estimationAccuracy !== null) {
    output += '⏱️  Time Estimation\n';
    output += `  🎓 Accuracy: ${summary.estimationAccuracy}%\n`;
    if (summary.averageActualMinutes !== null) {
      output += `  📏 Average Task Duration: ${formatMinutes(summary.averageActualMinutes)}\n`;
    }
    output += '\n';
  }

  // Productivity Streak
  if (summary.longestStreak > 0) {
    output += '🔥 Productivity Streak\n';
    output += `  Longest Streak: ${summary.longestStreak} consecutive day${summary.longestStreak > 1 ? 's' : ''}\n\n`;
  }

  // Most Productive Day
  if (summary.mostProductiveDay) {
    output += '💪 Most Productive Day\n';
    output += `  🗓️  ${summary.mostProductiveDay}\n\n`;
  }

  // Celebration Message
  output += `${summary.celebrationMessage}\n\n`;
  output += '✨ Summary saved for future reference\n';

  return output;
}

/**
 * Format minutes to readable time
 */
function formatMinutes(minutes: number): string {
  if (minutes < 60) {
    return `${minutes} minutes`;
  }
  const hours = Math.floor(minutes / 60);
  const remainingMinutes = minutes % 60;
  if (remainingMinutes === 0) {
    return `${hours} hour${hours > 1 ? 's' : ''}`;
  }
  return `${hours} hour${hours > 1 ? 's' : ''} ${remainingMinutes} min`;
}

/**
 * Format error message
 */
export function formatError(error: unknown): string {
  const message =
    error instanceof Error ? error.message : 'Unknown error occurred';
  return `❌ Error: ${message}`;
}
